// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/operator_auth/operator_auth.proto

package operator_auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OperatorAuth struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DeviceID             string   `protobuf:"bytes,2,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperatorAuth) Reset()         { *m = OperatorAuth{} }
func (m *OperatorAuth) String() string { return proto.CompactTextString(m) }
func (*OperatorAuth) ProtoMessage()    {}
func (*OperatorAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cd5e085d3bf211, []int{0}
}

func (m *OperatorAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatorAuth.Unmarshal(m, b)
}
func (m *OperatorAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatorAuth.Marshal(b, m, deterministic)
}
func (m *OperatorAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatorAuth.Merge(m, src)
}
func (m *OperatorAuth) XXX_Size() int {
	return xxx_messageInfo_OperatorAuth.Size(m)
}
func (m *OperatorAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatorAuth.DiscardUnknown(m)
}

var xxx_messageInfo_OperatorAuth proto.InternalMessageInfo

func (m *OperatorAuth) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *OperatorAuth) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

type OperatorAuthRequest struct {
	Auth                 *OperatorAuth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OperatorAuthRequest) Reset()         { *m = OperatorAuthRequest{} }
func (m *OperatorAuthRequest) String() string { return proto.CompactTextString(m) }
func (*OperatorAuthRequest) ProtoMessage()    {}
func (*OperatorAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cd5e085d3bf211, []int{1}
}

func (m *OperatorAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatorAuthRequest.Unmarshal(m, b)
}
func (m *OperatorAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatorAuthRequest.Marshal(b, m, deterministic)
}
func (m *OperatorAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatorAuthRequest.Merge(m, src)
}
func (m *OperatorAuthRequest) XXX_Size() int {
	return xxx_messageInfo_OperatorAuthRequest.Size(m)
}
func (m *OperatorAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatorAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OperatorAuthRequest proto.InternalMessageInfo

func (m *OperatorAuthRequest) GetAuth() *OperatorAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type OperatorAuthResponse struct {
	Jwt                  string   `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Result               string   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperatorAuthResponse) Reset()         { *m = OperatorAuthResponse{} }
func (m *OperatorAuthResponse) String() string { return proto.CompactTextString(m) }
func (*OperatorAuthResponse) ProtoMessage()    {}
func (*OperatorAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3cd5e085d3bf211, []int{2}
}

func (m *OperatorAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatorAuthResponse.Unmarshal(m, b)
}
func (m *OperatorAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatorAuthResponse.Marshal(b, m, deterministic)
}
func (m *OperatorAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatorAuthResponse.Merge(m, src)
}
func (m *OperatorAuthResponse) XXX_Size() int {
	return xxx_messageInfo_OperatorAuthResponse.Size(m)
}
func (m *OperatorAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatorAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OperatorAuthResponse proto.InternalMessageInfo

func (m *OperatorAuthResponse) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func (m *OperatorAuthResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*OperatorAuth)(nil), "operator_auth.OperatorAuth")
	proto.RegisterType((*OperatorAuthRequest)(nil), "operator_auth.OperatorAuthRequest")
	proto.RegisterType((*OperatorAuthResponse)(nil), "operator_auth.OperatorAuthResponse")
}

func init() {
	proto.RegisterFile("proto/operator_auth/operator_auth.proto", fileDescriptor_c3cd5e085d3bf211)
}

var fileDescriptor_c3cd5e085d3bf211 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x2f, 0x48, 0x2d, 0x4a, 0x2c, 0xc9, 0x2f, 0x8a, 0x4f, 0x2c, 0x2d, 0xc9, 0x40,
	0xe5, 0xe9, 0x81, 0x55, 0x08, 0xf1, 0xa2, 0x08, 0x4a, 0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4,
	0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5, 0xe5, 0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0x15,
	0x43, 0x14, 0x2b, 0x59, 0x71, 0xf1, 0xf8, 0x43, 0x95, 0x3b, 0x96, 0x96, 0x64, 0x08, 0xf1, 0x71,
	0x31, 0x79, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x31, 0x79, 0xba, 0x08, 0x49, 0x71,
	0x71, 0xb8, 0xa4, 0x96, 0x65, 0x26, 0xa7, 0x7a, 0xba, 0x48, 0x30, 0x81, 0x45, 0xe1, 0x7c, 0x25,
	0x37, 0x2e, 0x61, 0x64, 0xbd, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xfa, 0x5c, 0x2c,
	0x20, 0x8b, 0xc1, 0x86, 0x70, 0x1b, 0x49, 0xeb, 0xa1, 0xba, 0x11, 0x45, 0x07, 0x58, 0xa1, 0x92,
	0x03, 0x97, 0x08, 0xaa, 0x39, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x02, 0x5c, 0xcc, 0x59,
	0xe5, 0x25, 0x50, 0xc7, 0x80, 0x98, 0x42, 0x62, 0x5c, 0x6c, 0x45, 0xa9, 0xc5, 0xa5, 0x39, 0x25,
	0x50, 0xb7, 0x40, 0x79, 0x46, 0x6d, 0x8c, 0xa8, 0x4e, 0x09, 0x4e, 0x2d, 0x02, 0xb9, 0x51, 0x28,
	0x1f, 0xcd, 0x77, 0x4a, 0xf8, 0x1c, 0x03, 0x71, 0xbe, 0x94, 0x32, 0x5e, 0x35, 0x10, 0xa7, 0x29,
	0x89, 0x35, 0x5d, 0x7e, 0x32, 0x99, 0x49, 0x40, 0x89, 0x5b, 0xbf, 0xcc, 0x50, 0x3f, 0x3d, 0xb5,
	0x44, 0x37, 0xab, 0xbc, 0xc4, 0x8a, 0x51, 0xcb, 0x89, 0x3f, 0x0a, 0x35, 0xf4, 0x93, 0xd8, 0xc0,
	0xc1, 0x6c, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x20, 0x64, 0x3a, 0x50, 0xbe, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OperatorAuthServiceClient is the client API for OperatorAuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OperatorAuthServiceClient interface {
	OperatorAuth(ctx context.Context, in *OperatorAuthRequest, opts ...grpc.CallOption) (*OperatorAuthResponse, error)
}

type operatorAuthServiceClient struct {
	cc *grpc.ClientConn
}

func NewOperatorAuthServiceClient(cc *grpc.ClientConn) OperatorAuthServiceClient {
	return &operatorAuthServiceClient{cc}
}

func (c *operatorAuthServiceClient) OperatorAuth(ctx context.Context, in *OperatorAuthRequest, opts ...grpc.CallOption) (*OperatorAuthResponse, error) {
	out := new(OperatorAuthResponse)
	err := c.cc.Invoke(ctx, "/operator_auth.OperatorAuthService/OperatorAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OperatorAuthServiceServer is the server API for OperatorAuthService service.
type OperatorAuthServiceServer interface {
	OperatorAuth(context.Context, *OperatorAuthRequest) (*OperatorAuthResponse, error)
}

// UnimplementedOperatorAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOperatorAuthServiceServer struct {
}

func (*UnimplementedOperatorAuthServiceServer) OperatorAuth(ctx context.Context, req *OperatorAuthRequest) (*OperatorAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OperatorAuth not implemented")
}

func RegisterOperatorAuthServiceServer(s *grpc.Server, srv OperatorAuthServiceServer) {
	s.RegisterService(&_OperatorAuthService_serviceDesc, srv)
}

func _OperatorAuthService_OperatorAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OperatorAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorAuthServiceServer).OperatorAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/operator_auth.OperatorAuthService/OperatorAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorAuthServiceServer).OperatorAuth(ctx, req.(*OperatorAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OperatorAuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "operator_auth.OperatorAuthService",
	HandlerType: (*OperatorAuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OperatorAuth",
			Handler:    _OperatorAuthService_OperatorAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/operator_auth/operator_auth.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mikanpb/mikan.proto

package mikanpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Mikan struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Kind                 string   `protobuf:"bytes,2,opt,name=Kind,proto3" json:"Kind,omitempty"`
	Quality              int64    `protobuf:"varint,3,opt,name=Quality,proto3" json:"Quality,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mikan) Reset()         { *m = Mikan{} }
func (m *Mikan) String() string { return proto.CompactTextString(m) }
func (*Mikan) ProtoMessage()    {}
func (*Mikan) Descriptor() ([]byte, []int) {
	return fileDescriptor_d670e046051ee7bf, []int{0}
}

func (m *Mikan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mikan.Unmarshal(m, b)
}
func (m *Mikan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mikan.Marshal(b, m, deterministic)
}
func (m *Mikan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mikan.Merge(m, src)
}
func (m *Mikan) XXX_Size() int {
	return xxx_messageInfo_Mikan.Size(m)
}
func (m *Mikan) XXX_DiscardUnknown() {
	xxx_messageInfo_Mikan.DiscardUnknown(m)
}

var xxx_messageInfo_Mikan proto.InternalMessageInfo

func (m *Mikan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Mikan) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Mikan) GetQuality() int64 {
	if m != nil {
		return m.Quality
	}
	return 0
}

type MikanRequest struct {
	Mikan                *Mikan   `protobuf:"bytes,1,opt,name=mikan,proto3" json:"mikan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MikanRequest) Reset()         { *m = MikanRequest{} }
func (m *MikanRequest) String() string { return proto.CompactTextString(m) }
func (*MikanRequest) ProtoMessage()    {}
func (*MikanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d670e046051ee7bf, []int{1}
}

func (m *MikanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MikanRequest.Unmarshal(m, b)
}
func (m *MikanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MikanRequest.Marshal(b, m, deterministic)
}
func (m *MikanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MikanRequest.Merge(m, src)
}
func (m *MikanRequest) XXX_Size() int {
	return xxx_messageInfo_MikanRequest.Size(m)
}
func (m *MikanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MikanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MikanRequest proto.InternalMessageInfo

func (m *MikanRequest) GetMikan() *Mikan {
	if m != nil {
		return m.Mikan
	}
	return nil
}

type MikanResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MikanResponse) Reset()         { *m = MikanResponse{} }
func (m *MikanResponse) String() string { return proto.CompactTextString(m) }
func (*MikanResponse) ProtoMessage()    {}
func (*MikanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d670e046051ee7bf, []int{2}
}

func (m *MikanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MikanResponse.Unmarshal(m, b)
}
func (m *MikanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MikanResponse.Marshal(b, m, deterministic)
}
func (m *MikanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MikanResponse.Merge(m, src)
}
func (m *MikanResponse) XXX_Size() int {
	return xxx_messageInfo_MikanResponse.Size(m)
}
func (m *MikanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MikanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MikanResponse proto.InternalMessageInfo

func (m *MikanResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Mikan)(nil), "mikan.Mikan")
	proto.RegisterType((*MikanRequest)(nil), "mikan.MikanRequest")
	proto.RegisterType((*MikanResponse)(nil), "mikan.MikanResponse")
}

func init() { proto.RegisterFile("mikanpb/mikan.proto", fileDescriptor_d670e046051ee7bf) }

var fileDescriptor_d670e046051ee7bf = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xce, 0xcd, 0xcc, 0x4e,
	0xcc, 0x2b, 0x48, 0xd2, 0x07, 0xd3, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xac, 0x60, 0x8e,
	0x94, 0x4c, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x7e, 0x62, 0x41, 0xa6, 0x7e, 0x62, 0x5e, 0x5e,
	0x7e, 0x49, 0x62, 0x49, 0x66, 0x7e, 0x5e, 0x31, 0x44, 0x91, 0x92, 0x27, 0x17, 0xab, 0x2f, 0x48,
	0x99, 0x90, 0x10, 0x17, 0x8b, 0x5f, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10,
	0x98, 0x0d, 0x12, 0xf3, 0xce, 0xcc, 0x4b, 0x91, 0x60, 0x82, 0x88, 0x81, 0xd8, 0x42, 0x12, 0x5c,
	0xec, 0x81, 0xa5, 0x89, 0x39, 0x99, 0x25, 0x95, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x30,
	0xae, 0x92, 0x11, 0x17, 0x0f, 0xd8, 0xa8, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x25,
	0x2e, 0x88, 0x0b, 0xc0, 0x46, 0x72, 0x1b, 0xf1, 0xe8, 0x41, 0x1c, 0x07, 0x51, 0x03, 0x91, 0x52,
	0x52, 0xe7, 0xe2, 0x85, 0xea, 0x29, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x12, 0xe3, 0x62, 0x2b,
	0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x81, 0x3a, 0x04, 0xca, 0x33, 0x8a, 0x87, 0x1a, 0x1e, 0x9c, 0x5a,
	0x54, 0x96, 0x99, 0x9c, 0x2a, 0xe4, 0x0f, 0x73, 0xb7, 0x30, 0x8a, 0xb1, 0x10, 0xab, 0xa5, 0x44,
	0x50, 0x05, 0x21, 0x66, 0x2b, 0x49, 0x37, 0x5d, 0x7e, 0x32, 0x99, 0x49, 0x54, 0x49, 0x40, 0xbf,
	0xcc, 0x50, 0x3f, 0xb5, 0x22, 0x31, 0xb7, 0x20, 0x27, 0x55, 0x3f, 0x35, 0x39, 0x23, 0xdf, 0x8a,
	0x51, 0xcb, 0x89, 0x33, 0x8a, 0x1d, 0x1a, 0x88, 0x49, 0x6c, 0xe0, 0xa0, 0x31, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x3c, 0xc0, 0x9c, 0xe9, 0x56, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MikanServiceClient is the client API for MikanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MikanServiceClient interface {
	// rpc Mikan(MikanRequest) returns (MikanResponse) {};
	Mikan(ctx context.Context, in *MikanRequest, opts ...grpc.CallOption) (*MikanResponse, error)
}

type mikanServiceClient struct {
	cc *grpc.ClientConn
}

func NewMikanServiceClient(cc *grpc.ClientConn) MikanServiceClient {
	return &mikanServiceClient{cc}
}

func (c *mikanServiceClient) Mikan(ctx context.Context, in *MikanRequest, opts ...grpc.CallOption) (*MikanResponse, error) {
	out := new(MikanResponse)
	err := c.cc.Invoke(ctx, "/mikan.MikanService/Mikan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MikanServiceServer is the server API for MikanService service.
type MikanServiceServer interface {
	// rpc Mikan(MikanRequest) returns (MikanResponse) {};
	Mikan(context.Context, *MikanRequest) (*MikanResponse, error)
}

// UnimplementedMikanServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMikanServiceServer struct {
}

func (*UnimplementedMikanServiceServer) Mikan(ctx context.Context, req *MikanRequest) (*MikanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mikan not implemented")
}

func RegisterMikanServiceServer(s *grpc.Server, srv MikanServiceServer) {
	s.RegisterService(&_MikanService_serviceDesc, srv)
}

func _MikanService_Mikan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MikanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MikanServiceServer).Mikan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mikan.MikanService/Mikan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MikanServiceServer).Mikan(ctx, req.(*MikanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MikanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mikan.MikanService",
	HandlerType: (*MikanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mikan",
			Handler:    _MikanService_Mikan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mikanpb/mikan.proto",
}
